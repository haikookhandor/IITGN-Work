#include <iostream>
using namespace std;

unsigned long long fibonacci_recursion(int n)
{
    if (n == 1)
    {
        return 0;
    }
    if (n == 2)
    {
        return 1;
    }
    unsigned long long smallNumber = fibonacci_recursion(n - 1) + fibonacci_recursion(n - 2);
    return smallNumber;
}

int main()
{
    int n;
    cin >> n;
    for (int i = 1; i < n + 1; i++)
    {
        cout << fibonacci_recursion(i) << " ";
    }
    return 0;
}


#include <iostream>
using namespace std;

int main() {
	int n;
	cin>>n;
	unsigned long long t1=0;
	unsigned long long t2=1;
	unsigned long long nextTerm = t1+t2;
	cout<<t1<<" "<<t2<<" ";
	for(int i=2;i<n;i++)
	{
	    cout<<nextTerm<<" ";
	    t1=t2;
	    t2=nextTerm;
	    nextTerm = t1+t2;
	}
	return 0;
}


#include <iostream>
using namespace std;
unsigned long long array[100];
unsigned long long fibonacci_recursion_memoization(int n)
{
    if (n == 1)
    {
        return 0;
    }
    if (n == 2)
    {
        return 1;
    }
    if (array[n] != 0)
    {
        return array[n];
    }
    else
    {
        array[n] = fibonacci_recursion_memoization(n - 1) + fibonacci_recursion_memoization(n - 2);
        return array[n];
    }
}

int main()
{
    int n;
    cin >> n;
    for (int i = 1; i < n + 1; i++)
    {
        cout << fibonacci_recursion_memoization(i) << " ";
    }
    return 0;
}


#include <iostream>
using namespace std;

int main()
{
    int n;
    cin >> n;
    unsigned long long array[100];
    array[0] = 0;
    array[1] = 1;
    for (int i = 2; i < n; i++)
    {
        array[i] = array[i - 1] + array[i - 2];
    }
    for (int j = 0; j < n; j++)
    {
        cout << array[j] << " ";
    }

    return 0;
}

#include <iostream>
#include <stdlib.h>
#include <ctime>
using namespace std;

int main()
{
    srand(time(0));
    int a;
    cin >> a;
    int arr1[a][a];
    int arr2[a][a];
    int final_array[a][a];
    for (int i = 0; i < a; i++)
    {
        for (int j = 0; j < a; j++)
        {
            arr1[i][j] = (rand() % (11));
        }
    }
    for (int i = 0; i < a; i++)
    {
        for (int j = 0; j < a; j++)
        {
            arr2[i][j] = (rand() % (11));
        }
    }
    for (int i = 0; i < a; i++)
    {
        for (int j = 0; j < a; j++)
        {
            final_array[i][j] = 0;
            for (int k = 0; k < a; k++)
            {
                final_array[i][j] += arr1[i][k] * arr2[k][j];
            }
        }
    }

    for (int i = 0; i < a; i++)
    {
        for (int j = 0; j < a; j++)
        {
            cout << final_array[i][j] << "\t";
        }
        cout << "\n";
    }

    return 0;
}

import random as r

a=int(input())
arr1 = [[r.randint(-10,10) for i in range(a)] for j in range(a)]
arr2 = [[r.randint(-10,10) for i in range(a)] for j in range(a)]
final_array = [[0 for i in range(a)] for j in range(a)]

for i in range(a):
    for j in range(a):
        final_array[i][j]=0
        for k in range(a):
            final_array[i][j]+=arr1[i][k]*arr2[k][j]
            
for i in range(a):
    for j in range(a):
        print(final_array[i][j],end=" ")
    print("\n")

